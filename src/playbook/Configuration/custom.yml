---
title: Root Playbook File
description: Runs all of the Playbook files
actions:
    # Warn user if their Windows install is old
  - !writeStatus: {status: 'Checking prerequisites'}
  - !powerShell:
    command: '.\PREREQUISITES.ps1; exit $lastexitcode'
    exeDir: true
    wait: true
    handleExitCodes: {11: halt, 10: log}

  - !writeStatus: {status: 'Copying files'}
  - !cmd:
    command: 'robocopy "AtlasModules" "%windir%\AtlasModules" /E /PURGE /IM /IT /NP > nul'
    weight: 10
    wait: true
    exeDir: true
    handleExitCodes: {'>1': halt}
  - !cmd:
    command: 'robocopy "AtlasDesktop" "%windir%\AtlasDesktop" /E /PURGE /IM /IT /NP > nul'
    weight: 10
    wait: true
    exeDir: true
    handleExitCodes: {'>1': halt}
  - !cmd:
    command: 'copy /y "Themes" "%windir%\Resources\Themes" > nul'
    weight: 10
    wait: true
    exeDir: true

    # Prevent annoying notifications during deployment
  - !taskKill: {name: 'explorer'}
  - !cmd:
    command: '"AtlasDesktop\6. Advanced Configuration\Services\Notifications\Disable Notifications.cmd" /includeuserservice'
    exeDir: true
    wait: true
    runas: currentUserElevated
  - !run: {exe: 'explorer.exe', runas: 'currentUser', wait: false}

    # Prevent computer from going to sleep during deployment
  - !powerShell: 
    command: >-
      $guid = New-Guid;
      """$guid""" | Out-File -Force -LiteralPath """$([Environment]::GetFolderPath('Windows'))\atlasospowercfgguid""";
      powercfg /duplicatescheme """e9a42b02-d5df-448d-aa00-03f14749eb61""" """$guid""";
      powercfg /setactive """$guid""";
      powercfg /changename """$guid""" """Atlas Installation Scheme""" """Duplicate of Ultimate Performance used during Atlas installation.""";
      powercfg /x monitor-timeout-ac 0;
      powercfg /x monitor-timeout-dc 0;
      powercfg /x disk-timeout-ac 0;
      powercfg /x disk-timeout-dc 0;
      powercfg /x standby-timeout-ac 0;
      powercfg /x standby-timeout-dc 0;
      powercfg /x hibernate-timeout-ac 0;
      powercfg /x hibernate-timeout-dc 0;

  # Configure PowerShell first so that other PowerShell scripts work
  # NGEN - .NET assemblies PowerShell optimization
  - !writeStatus: {status: 'Optimizing PowerShell'}
  - !task: {path: 'tweaks\scripts\script-ngen.yml'}
  - !task: {path: 'tweaks\qol\config-powershell.yml'}

  # Cleanup script takes longer to finish so it has its own status
  # It's ran here as you can't check when cleanmgr is finished
  - !writeStatus: {status: 'Cleaning up'}
  - !task: {path: 'tweaks\scripts\script-cleanup.yml'}

  # Set hidden Settings pages
  # Done before everything else as scripts will overwrite it
  - !task: {path: 'tweaks\qol\set-hidden-settings-pages.yml'}

  # Main tasks
  - !task: {path: 'atlas\start.yml'}
  - !task: {path: 'atlas\services.yml'}
  - !task: {path: 'atlas\components.yml'}
  - !task: {path: 'atlas\appx.yml'}
  - !task: {path: 'tweaks.yml'}
